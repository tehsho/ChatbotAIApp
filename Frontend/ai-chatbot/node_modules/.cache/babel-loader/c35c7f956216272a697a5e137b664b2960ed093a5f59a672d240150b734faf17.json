{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\Coginov\\\\ChatbotAI\\\\Frontend\\\\ai-chatbot\\\\src\\\\pages\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const user = await login(username, password);\n      onLogin(user);\n      navigate('/chat');\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.message) {\n        setError(err.response.data.message); // API sent an error message\n      } else if (err.message) {\n        setError(`Error: ${err.message}`); // JS-level error (e.g., network)\n      } else {\n        setError('An unexpected error occurred');\n      }\n      console.error('Login error:', err); // Log full error for debugging\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    style: {\n      maxWidth: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-3\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control mb-3\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Ensabnh8awqwln75dYV2FIvVkb0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","login","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","username","setUsername","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","user","err","response","data","message","console","className","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Development/Coginov/ChatbotAI/Frontend/ai-chatbot/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useState, FormEvent } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login } from '../services/authService';\r\nimport { User } from '../types/models';\r\n\r\ninterface Props {\r\n  onLogin: (user: User) => void;\r\n}\r\n\r\nconst LoginPage: React.FC<Props> = ({ onLogin }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\nconst handleSubmit = async (e: FormEvent) => {\r\n  e.preventDefault();\r\n  try {\r\n    const user = await login(username, password);\r\n    onLogin(user);\r\n    navigate('/chat');\r\n  } catch (err: any) {\r\n    if (err.response && err.response.data && err.response.data.message) {\r\n      setError(err.response.data.message); // API sent an error message\r\n    } else if (err.message) {\r\n      setError(`Error: ${err.message}`); // JS-level error (e.g., network)\r\n    } else {\r\n      setError('An unexpected error occurred');\r\n    }\r\n\r\n    console.error('Login error:', err); // Log full error for debugging\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-5\" style={{ maxWidth: 400 }}>\r\n      <h2>Login</h2>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Username\"\r\n          value={username} onChange={e => setUsername(e.target.value)} required />\r\n        <input type=\"password\" className=\"form-control mb-3\" placeholder=\"Password\"\r\n          value={password} onChange={e => setPassword(e.target.value)} required />\r\n        <button className=\"btn btn-primary\" type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}